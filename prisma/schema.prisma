generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  User              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Categories {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  image       String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  price       Float
  stock       Int
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model Review {
  id        Int      @id @default(autoincrement())
  serviceId Int
  userId    String
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  Service   Service  @relation(fields: [serviceId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model Service {
  id                                             Int       @id @default(autoincrement())
  supplierId                                     Int
  name                                           String
  description                                    String?
  price                                          Float
  location                                       String?
  availableFrom                                  DateTime?
  availableTo                                    DateTime?
  createdAt                                      DateTime  @default(now())
  packs                                          Json?
  images                                         Json?
  ytLink                                         String?
  sizeTour                                       Float?
  serviceType                                    String?
  serviceCategory                                String?
  stateFrom                                      String?
  cityFrom                                       String?
  stateTo                                        String?
  cityTo                                         String?
  includes                                       Json?
  excludes                                       Json?
  faqs                                           Json?
  itinerary                                      Json?
  hotelProviderID                                Int?
  transportProviderID                            Int?
  dates                                          Json?
  Review                                         Review[]
  Supplier_Service_hotelProviderIDToSupplier     Supplier? @relation("Service_hotelProviderIDToSupplier", fields: [hotelProviderID], references: [id])
  Supplier_Service_supplierIdToSupplier          Supplier  @relation("Service_supplierIdToSupplier", fields: [supplierId], references: [id])
  Supplier_Service_transportProviderIDToSupplier Supplier? @relation("Service_transportProviderIDToSupplier", fields: [transportProviderID], references: [id])
}

model Supplier {
  id                                            Int       @id @default(autoincrement())
  name                                          String    @unique
  contactEmail                                  String    @unique
  phoneNumber                                   String?
  address                                       String?
  description                                   String?
  imgLogo                                       String?
  createdAt                                     DateTime  @default(now())
  supplierType                                  String?
  location                                      Json?
  photos                                        Json?
  extras                                        Json?
  info                                          Json?
  supplierSubType                               String?
  Service_Service_hotelProviderIDToSupplier     Service[] @relation("Service_hotelProviderIDToSupplier")
  Service_Service_supplierIdToSupplier          Service[] @relation("Service_supplierIdToSupplier")
  Service_Service_transportProviderIDToSupplier Service[] @relation("Service_transportProviderIDToSupplier")
  User                                          User[]
}

model User {
  id            String    @id
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role      @default(admin)
  supplierId    Int?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime
  Account       Account[]
  Review        Review[]
  Supplier      Supplier? @relation(fields: [supplierId], references: [id])
}

model VerificationToken {
  identifier String   @id @unique
  token      String
  expires    DateTime
}

model global_locations {
  id      BigInt @id @default(autoincrement())
  country String
  state   String
  city    String
}

enum Role {
  user
  admin
  superadmin
}
